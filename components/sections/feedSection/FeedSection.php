<?php
/**
 * Created by PhpStorm.
 * User: Rauan
 * Date: 23.06.2016
 * Time: 22:07
 */

namespace app\components\sections\feedSection;


use app\components\parents\PageWidget;
use app\models\Swd;
use linslin\yii2\curl\Curl;
use Yii;
use yii\helpers\ArrayHelper;

class FeedSection extends PageWidget
{
    public $instaFeeds;
    public $googleFeeds;
    public $mode = "asSection";

    const PLACE_ID = 'ChIJZ4oaEx-ERUIRm8tYv1iN2qg';
    const PER_PAGE_INSTA_POST = 3;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->googleFeeds = $this->getGoogleFeeds();
        if($this->mode == "asSection"){

            $this->getInstaFeeds();
            $this->uniqueInstaFeeds();
            $this->getLast(self::PER_PAGE_INSTA_POST);
        } else {
            $this->getAllInstaFeeds();
            $this->uniqueInstaFeeds();

        }

    }

    public function run()
    {
        parent::run();
        $this->registerClientScript();
//        if(\Yii::getAlias('@device') != 'mobile')
//            $models = Copyright::find()->where(['page' => $this->page, 'section' => 'feedSection'])->all();
//        else
//            $models = Copyright::find()->where(['page' => $this->page, 'section' => 'feedSection'])->limit(3)->all();
//
//        return $this->render('view',['feedbacks' => $models]);

        return $this->render('view',['googleFeeds' => $this->googleFeeds, 'instaFeeds' => $this->instaFeeds]);


    }


    private function getLast($number){
        if(count($this->instaFeeds) > $number){
            $this->instaFeeds = array_slice($this->instaFeeds,0,$number);
        }
    }

    private function getGoogleFeeds(){
        $curl = new Curl();
        $url = 'https://maps.googleapis.com/maps/api/place/details/json?placeid='.FeedSection::PLACE_ID.'&key='.Yii::$app->params['googlePlusKey'];
        $response = $curl->get($url);
        $response = json_decode($response,true);

        //trying to fetch only good reviews
        $goodReviews = [];

        foreach ($response['result']['reviews'] as $review)
        {
            if($review['rating'] > 3)
                $goodReviews[] = $review;
        }

        return $goodReviews;
    }

    public function getInstaFeeds(){
        if($this->validateData())
        {
            $this->instaFeeds = [];
            $tmpPage = $this->page;
            while(true)
            {
                //trying to get simple widget data
                $swd = Swd::find()->where(['widget_namespace' => $this->getNameSpace(), 'page_id' => $tmpPage->id,'key' => 'instaEmbed'])->orderBy(['id' => SORT_DESC])->all();
                foreach ($swd as $key=> $value){
                    if(!in_array($value->value,$this->instaFeeds))
                    {
                        $this->instaFeeds[] = $value->value;
                    }
                }
                if(is_null($tmpPage->parent_id))
                    break;
                else
                    $tmpPage = $tmpPage->parent;

            }
        }
    }

    public function getAllInstaFeeds(){
        if($this->validateData())
        {
            $swd = Swd::find()->where(['widget_namespace' => $this->getNameSpace(), 'key' => 'instaEmbed'])->all();
            $this->instaFeeds = ArrayHelper::getColumn($swd,'value',false);
        }
    }

    public function uniqueInstaFeeds(){
        $copyFeeds = [];
        $urlFeeds = [];
        foreach ($this->instaFeeds as $instaFeed) {
            $arrFeed = explode('a href="',$instaFeed);
            $arrFeed = explode('"',$arrFeed[1]);
            if(!in_array($arrFeed[0],$urlFeeds))
            {
                $urlFeeds[] = $arrFeed[0];
                $copyFeeds[] = $instaFeed;
            }

        }
        $this->instaFeeds = $copyFeeds;
    }

    protected function registerClientScript()
    {
        $view = $this->getView();
        FeedSectionAsset::register($view);
    }

}